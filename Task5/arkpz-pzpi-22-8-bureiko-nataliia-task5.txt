Міністерство освіти і науки України
Харківський національний університет радіоелектроніки





Кафедра програмної інженерії




ЗВІТ
з лабораторної роботи №5
з дисципліни «Аналіз та рефакторинг коду»
на тему «Розгортання програмної системи та демонстрація її роботи»





Виконала:                                                                      Перевірив:
студ. гр. ПЗПІ-22-8                                                       ст. викл. каф. ПІ 
Бурейко Н. М.                                                                Сокорчук І. П.





Харків 2024
5 РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ


5.1 Мета роботи
     Розгорнути програмну систему для проведення рекламної акції та продемонструвати її роботу.
     
5.2 Хід роботи 
     Розгортання програмної системи для проведення рекламної акції включає кілька основних етапів, що охоплюють налаштування серверної частини, IoT-клієнта та веб-додатку. 
     Система реалізована за допомогою стеку MERN (MongoDB, Express.js, React, Node.js) та розгорнута на хмарному сервері AWS S3. Веб-додаток дозволяє редагувати каталог товарів, а IoT-клієнт розроблений на платформі WinForms для симуляції взаємодії з серверною частиною.
     Розглянемо детальніше технології, що були застосовані для реалізації саме серверної частини, та їх призначення:
      — серверна частина розроблена за допомогою Node.js
      — використовується Express.js для обробки HTTP-запитів та маршрутизації;
      — дані зберігаються в MongoDB, використовується хмарне сховище MongoDB Atlas;
      — для розміщення серверної частини використовується AWS S3 для зберігання зображень.
     Дії, що необхідно виконати для користування системою:
      — завантаження серверного коду через Git;
      — інсталяція залежностей (команда npm install) у середовищі Visual Studio Code (якщо npm не встановлений, то перед виконанням команди треба його завантажити);
      — налаштування змінних середовища (файлу .env) для: URL бази даних (база даних має початковий набір даних за замовченням), токенів аутентифікації, шляхів до AWS S3 для збереження зображень;
      — запуск сервера через команду node server.js.
     Для доступу до AWS S3 необхідно створити IAM-роль та зберегти Access Key в змінних середовища на сервері (це робиться на сайті серверу адміністратором).
     Веб-додаток можна використовувати для редагування каталогу товарів. Для цього треба завантажити код фронтенду, відкрити у середовищі Visual Studio Code та запустити дві команди: npm run build та npm run dev. Другу команду треба запускати при запущеному сервері.
     Симуляція IoT-клієнта створена на платформі WinForms. Для використання необхідно інсталювати WinForms додаток на пристрій, що буде взаємодіяти із серверною частиною. Для коректної роботи IoT-клієнта необхідно налаштувати мережевий доступ до серверної частини, тобто сервер має бути запущений перед використанням.
     Розроблена програмна система для проведення рекламної акції забезпечує інтерактивну взаємодію з клієнтами, використовуючи сучасні технології стеку MERN для серверної частини та WinForms для симуляції IoT-клієнта. Система дозволяє автоматично реагувати на приближення клієнтів, підвищувати яскравість екрану, підсвічувати продукти і надавати доступ до пробників після проходження опитування. Хмарні сервіси AWS S3 та MongoDB Atlas використовуються для зберігання даних, а інтеграція з IoT-клієнтом дозволяє створити унікальний досвід взаємодії з продуктом. Завдяки чіткій інфраструктурі і налагодженим процесам розгортання, система може забезпечити ефективне управління рекламними кампаніями та залучення клієнтів.
     
     

     Висновки
     Під час виконання лабораторної роботи було розгорнуто програмну систему, описано шляхи розгортання та продемонструвано її роботу. Відео демонстрації роботи системи доступне за наступним посиланням: https://youtu.be/Du--pUy09gM.
     
     

2


